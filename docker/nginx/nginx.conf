# ============================================================================
# ShadowNews Nginx Configuration
# ============================================================================
#
# Production-ready nginx configuration for ShadowNews platform providing:
# - High-performance reverse proxy for Node.js backend
# - Static file serving with optimized caching
# - WebSocket support for real-time features
# - SSL/TLS termination with modern security
# - Rate limiting for API protection
# - Gzip compression for performance
# - Security headers for XSS/CSRF protection
#
# Key Features:
# - Load balancing across backend instances
# - Separate rate limits for API vs auth endpoints
# - Email webhook handling with large file support
# - Progressive Web App (PWA) support
# - Comprehensive logging and health checks
#
# Author: ShadowNews Team
# Version: 1.0.0
# Last Modified: 2025-07-27
# ============================================================================

# Main process configuration
# Run nginx as nginx user for security isolation
user nginx;

# Auto-detect optimal number of worker processes based on CPU cores
# This provides optimal performance across different server configurations
worker_processes auto;

# Error logging with warning level to balance debugging and performance
error_log /var/log/nginx/error.log warn;

# Process ID file location for process management
pid /var/run/nginx.pid;

# ============================================================================
# Events Configuration
# ============================================================================
# Optimized event handling for high-concurrency ShadowNews workloads
events {
    # Maximum concurrent connections per worker process
    # 1024 connections per worker provides good balance for most workloads
    worker_connections 1024;
    
    # Use epoll for Linux systems - most efficient connection method
    # Provides better performance than select/poll for high connection counts
    use epoll;
    
    # Accept multiple connections simultaneously
    # Reduces latency by accepting multiple connections per event loop iteration
    multi_accept on;
}

# ============================================================================
# HTTP Configuration Block
# ============================================================================
http {
    # MIME types configuration
    # Include standard MIME type mappings for proper content type detection
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ========================================================================
    # Logging Configuration
    # ========================================================================
    # Comprehensive access log format including security-relevant headers
    # Captures client IP, user, timestamp, request details, response status,
    # bytes sent, referrer, user agent, and forwarded IPs for analysis
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Main access log with detailed request information
    access_log /var/log/nginx/access.log main;

    # ========================================================================
    # Performance Optimization Settings
    # ========================================================================
    # Enable sendfile for efficient file serving
    # Allows nginx to use kernel sendfile() for better I/O performance
    sendfile on;
    
    # Push packets immediately when they become available
    # Optimizes network performance for real-time applications like ShadowNews
    tcp_nopush on;
    tcp_nodelay on;
    
    # Keep connections alive for 65 seconds to reduce connection overhead
    # Balances connection reuse with resource conservation
    keepalive_timeout 65;
    
    # Hash table size for MIME types - optimized for typical web applications
    types_hash_max_size 2048;
    
    # Maximum upload size for CSV files and email attachments
    # 50MB limit accommodates large email repositories and file uploads
    client_max_body_size 50M;

    # ========================================================================
    # Gzip Compression Configuration
    # ========================================================================
    # Enable gzip compression for faster content delivery
    gzip on;
    
    # Include Vary header for proper caching behavior with compressed content
    gzip_vary on;
    
    # Compress responses for all proxy requests
    gzip_proxied any;
    
    # Compression level 6 provides good balance between CPU usage and compression ratio
    gzip_comp_level 6;
    
    # Compress common ShadowNews content types for optimal performance
    # Includes text, CSS, JavaScript, JSON, XML, and SVG files
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # ========================================================================
    # Security Headers Configuration
    # ========================================================================
    # Comprehensive security headers to protect ShadowNews users from common attacks
    
    # Prevent clickjacking attacks by restricting iframe embedding
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # Prevent MIME type sniffing attacks
    add_header X-Content-Type-Options "nosniff" always;
    
    # Enable XSS protection in browsers
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Control referrer information sent to external sites
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Content Security Policy - allows inline scripts/styles for React/ShadowNews functionality
    # Note: This is permissive for development; should be stricter in production
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
    
    # Enforce HTTPS with HSTS for secure communication
    # 1-year max-age with subdomain inclusion for comprehensive security
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ========================================================================
    # Rate Limiting Configuration
    # ========================================================================
    # Protect ShadowNews API from abuse and ensure fair resource usage
    
    # General API rate limiting: 10 requests per second per IP
    # 10MB zone can store ~160,000 IP addresses for rate limiting state
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    
    # Stricter rate limiting for authentication endpoints: 5 requests per minute
    # Prevents brute force attacks on login/registration endpoints
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;

    # ========================================================================
    # Upstream Server Configuration
    # ========================================================================
    # Backend server pool for ShadowNews API and application logic
    upstream backend {
        # Use least_conn for balanced load distribution
        # Ensures new connections go to server with fewest active connections
        least_conn;
        
        # Backend server configuration with health checking
        # max_fails=3: Mark server as down after 3 failed requests
        # fail_timeout=30s: Wait 30 seconds before retrying failed server
        server backend:5000 max_fails=3 fail_timeout=30s;
        
        # Keep 32 idle connections open to backend for improved performance
        # Reduces connection establishment overhead for frequent requests
        keepalive 32;
    }

    # WebSocket server pool for real-time ShadowNews features
    upstream websocket {
        # Use ip_hash to ensure WebSocket connections stay with same server
        # Critical for maintaining WebSocket session state across requests
        ip_hash;
        
        # WebSocket server with health monitoring
        server backend:5001 max_fails=3 fail_timeout=30s;
    }

    # ========================================================================
    # HTTP to HTTPS Redirect Server Block
    # ========================================================================
    # Automatically redirect all HTTP traffic to HTTPS for security
    server {
        # Listen on standard HTTP port
        listen 80;
        
        # Match any server name (wildcard)
        server_name _;
        
        # 301 permanent redirect to HTTPS with same path
        # Ensures all ShadowNews traffic uses encrypted connections
        return 301 https://$host$request_uri;
    }

    # ========================================================================
    # Main HTTPS Server Block - ShadowNews Application
    # ========================================================================
    server {
        # Listen on HTTPS port with HTTP/2 support for performance
        listen 443 ssl http2;
        
        # Primary domain for ShadowNews platform
        server_name shadownews.community;

        # ====================================================================
        # SSL/TLS Configuration
        # ====================================================================
        # SSL certificate files for HTTPS encryption
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Use modern TLS protocols only (1.2 and 1.3) for security
        ssl_protocols TLSv1.2 TLSv1.3;
        
        # Strong cipher suites - exclude weak ciphers and NULL encryption
        ssl_ciphers HIGH:!aNULL:!MD5;
        
        # Prefer server cipher order for better security control
        ssl_prefer_server_ciphers on;
        
        # SSL session caching for performance - 10MB cache, 10 minute timeout
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # ====================================================================
        # Frontend Static Files - React SPA
        # ====================================================================
        # Serve React application and handle client-side routing
        location / {
            # Serve files from nginx html directory (built React app)
            root /usr/share/nginx/html;
            
            # Try serving file directly, then as directory, finally fallback to index.html
            # This enables React Router to handle client-side routing properly
            try_files $uri $uri/ /index.html;
            
            # Cache static files for 1 day to improve performance
            expires 1d;
            
            # Set cache control headers for optimal browser caching
            add_header Cache-Control "public, immutable";
        }

        # ====================================================================
        # API Routes - Backend Proxy Configuration
        # ====================================================================
        # Proxy all API requests to Node.js backend with rate limiting
        location /api {
            # Apply API rate limiting: 10 req/sec with 20 request burst
            # nodelay processes burst requests immediately if capacity allows
            limit_req zone=api_limit burst=20 nodelay;
            
            # Proxy configuration for backend communication
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # WebSocket upgrade headers (required for some API endpoints)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            
            # Standard proxy headers for proper request forwarding
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Bypass cache for WebSocket upgrades
            proxy_cache_bypass $http_upgrade;
            
            # Timeout configuration for long-running API requests
            proxy_read_timeout 300s;    # 5 minutes for complex operations
            proxy_connect_timeout 75s;  # 75 seconds for connection establishment
        }

        # ====================================================================
        # Authentication Endpoints - Enhanced Security
        # ====================================================================
        # Stricter rate limiting for authentication to prevent brute force attacks
        location ~ ^/api/(auth|login|register) {
            # Apply stricter rate limiting: 5 req/min with 5 request burst
            # Critical for preventing authentication abuse
            limit_req zone=auth_limit burst=5 nodelay;
            
            # Proxy to backend with standard headers
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ====================================================================
        # WebSocket Support - Real-time Features
        # ====================================================================
        # Handle WebSocket connections for ShadowNews real-time functionality
        location /ws {
            # Proxy to dedicated WebSocket upstream with session persistence
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            
            # Required headers for WebSocket protocol upgrade
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Standard proxy headers for connection context
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for persistent WebSocket connections
            # 1 hour timeout accommodates long-lived real-time connections
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # ====================================================================
        # Email Webhook Endpoint - Inbound Email Processing
        # ====================================================================
        # Handle inbound emails from email service providers (SendGrid, Mailgun, etc.)
        location /api/email/inbound {
            # Allow large email attachments (100MB) for comprehensive email processing
            client_max_body_size 100M;
            
            # Proxy to backend for email processing
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Disable request buffering for real-time email processing
            # Allows streaming of large email payloads without memory issues
            proxy_request_buffering off;
        }

        # ====================================================================
        # CSV Upload Endpoint - Repository Email Lists
        # ====================================================================
        # Handle large CSV file uploads for email repository creation
        location /api/csv/upload {
            # Allow large CSV files (100MB) for comprehensive email lists
            # Supports enterprise-scale repository imports
            client_max_body_size 100M;
            
            # Proxy to backend for CSV processing and validation
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Disable buffering for real-time upload progress feedback
            proxy_request_buffering off;
        }

        # ====================================================================
        # Health Check Endpoint - Load Balancer Integration
        # ====================================================================
        # Simple health check for load balancers and monitoring systems
        location /health {
            # Disable access logging for health checks to reduce log noise
            access_log off;
            
            # Return simple 200 OK response with health status
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ====================================================================
        # Progressive Web App (PWA) Support
        # ====================================================================
        # Service Worker - No caching for dynamic behavior
        location /service-worker.js {
            root /usr/share/nginx/html;
            
            # Prevent caching of service worker to ensure updates are applied
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            
            # Allow service worker to control entire domain
            add_header Service-Worker-Allowed "/";
        }

        # Web App Manifest - Minimal caching for PWA metadata
        location /manifest.json {
            root /usr/share/nginx/html;
            
            # Short cache duration allows quick updates to PWA configuration
            add_header Cache-Control "no-cache";
        }

        # ====================================================================
        # Static Assets - Aggressive Caching
        # ====================================================================
        # Cache static assets for 1 year with immutable flag for optimal performance
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|svg|woff|woff2|ttf|eot)$ {
            root /usr/share/nginx/html;
            
            # Long-term caching for static assets (365 days)
            # Immutable flag tells browsers content will never change
            expires 365d;
            add_header Cache-Control "public, immutable";
        }

        # ====================================================================
        # Security - Hidden File Protection
        # ====================================================================
        # Deny access to hidden files and directories (starting with .)
        # Protects .env, .git, and other sensitive configuration files
        location ~ /\. {
            # Deny all access to hidden files
            deny all;
            
            # Don't log access attempts to hidden files to reduce log noise
            access_log off;
            log_not_found off;
        }
    }
}
# ============================================================================
# ShadowNews Redis Configuration
# ============================================================================
#
# Production-optimized Redis configuration for ShadowNews platform providing:
# - High-performance caching for user sessions and API responses
# - Real-time pub/sub messaging for WebSocket features
# - Rate limiting data storage for API protection
# - Email queue management for repository notifications
# - Repository analytics and snowball effect tracking
#
# Key Use Cases:
# - User session storage and authentication tokens
# - API rate limiting counters and blacklists
# - Real-time notification distribution via pub/sub
# - Email digest queues and delivery tracking
# - Repository member caching and snowball metrics
# - Post karma calculations and voting state
#
# Performance Optimizations:
# - Memory-efficient data structures for large datasets
# - Persistence strategy balancing durability and performance
# - Connection pooling and timeout optimization
# - Security hardening with password and command restrictions
#
# Author: ShadowNews Team
# Version: 1.0.0
# Last Modified: 2025-07-27
# ============================================================================

# ============================================================================
# Network Configuration
# ============================================================================
# Network settings optimized for ShadowNews containerized environment

# Bind to all interfaces for Docker container accessibility
# Allows connections from ShadowNews backend services
bind 0.0.0.0

# Enable protected mode for basic security
# Requires authentication for non-localhost connections
protected-mode yes

# Standard Redis port for service discovery
port 6379

# TCP listen backlog - number of pending connections
# 511 is sufficient for typical ShadowNews load patterns
tcp-backlog 511

# Client idle timeout (0 = disabled)
# Keep connections alive for persistent ShadowNews sessions
timeout 0

# TCP keepalive interval to detect dead connections
# 300 seconds balances resource usage with connection reliability
tcp-keepalive 300

# ============================================================================
# General Server Configuration
# ============================================================================
# Core Redis server settings for containerized ShadowNews deployment

# Run in foreground for Docker container management
# Docker handles process supervision, so no daemon mode needed
daemonize no

# No external process supervision in containerized environment
supervised no

# Process ID file location for container management
pidfile /var/run/redis_6379.pid

# Logging level - notice provides good balance of information and performance
# Captures important events without excessive verbosity
loglevel notice

# Log to stdout for Docker log collection
# Empty string sends logs to stdout for container log aggregation
logfile ""

# Number of databases - 16 provides good separation for different data types
# DB 0: Sessions, DB 1: Rate limiting, DB 2: Pub/sub, etc.
databases 16

# Disable Redis logo on startup for cleaner container logs
always-show-logo no

# ============================================================================
# Data Persistence Configuration (RDB Snapshots)
# ============================================================================
# Snapshot-based persistence for ShadowNews data durability

# Automatic snapshots based on data change frequency
# save <seconds> <changes> - snapshot if at least <changes> keys changed in <seconds>

# Save if at least 1 key changed in 900 seconds (15 minutes)
# Captures infrequent but important changes like configuration updates
save 900 1

# Save if at least 10 keys changed in 300 seconds (5 minutes)
# Handles moderate activity like user sessions and rate limiting
save 300 10

# Save if at least 10,000 keys changed in 60 seconds (1 minute)
# Captures high activity periods like viral post interactions
save 60 10000

# Stop accepting writes if snapshot fails - ensures data consistency
# Critical for ShadowNews data integrity
stop-writes-on-bgsave-error yes

# Compress snapshots for efficient storage
# Reduces disk usage for large ShadowNews datasets
rdbcompression yes

# Add checksum to snapshots for corruption detection
# Ensures data integrity during restores
rdbchecksum yes

# Snapshot filename in container volume
dbfilename dump.rdb

# Data directory (current directory in container)
dir ./

# ============================================================================
# Replication Configuration
# ============================================================================
# Master-slave replication settings for high availability (if used)

# Serve stale data when replica loses connection to master
# Ensures ShadowNews availability during temporary network issues
replica-serve-stale-data yes

# Replicas are read-only by default for data consistency
# Prevents accidental writes to replica instances
replica-read-only yes

# Use disk-based replication for reliability
# Ensures complete data transfer for large ShadowNews datasets
repl-diskless-sync no

# Delay for diskless sync (when enabled)
repl-diskless-sync-delay 5

# Replica ping interval for connection health checking
repl-ping-replica-period 10

# Replication timeout for connection failure detection
repl-timeout 60

# Enable TCP_NODELAY for faster replication
# Improves real-time data sync for ShadowNews features
repl-disable-tcp-nodelay no

# Replication backlog size for partial resynchronization
# 1MB handles typical ShadowNews update patterns
repl-backlog-size 1mb

# Backlog TTL for replica reconnection efficiency
# 1 hour allows replicas to resume without full sync
repl-backlog-ttl 3600

# ============================================================================
# Security Configuration
# ============================================================================
# Enhanced security settings for production ShadowNews deployment

# Require password authentication for all connections
# Strong password for production security
requirepass shadownews_redis_2025_secure_password

# Disable dangerous commands to prevent data loss
# These commands are renamed to empty string (disabled)

# Disable FLUSHDB - prevents accidental database clearing
rename-command FLUSHDB ""

# Disable FLUSHALL - prevents accidental data wipe
rename-command FLUSHALL ""

# Disable KEYS - prevents performance issues with large datasets
rename-command KEYS ""

# Disable CONFIG - prevents unauthorized configuration changes
rename-command CONFIG ""

# ============================================================================
# Client Connection Management
# ============================================================================
# Maximum number of simultaneous client connections
# 10,000 clients support high-traffic ShadowNews usage patterns
maxclients 10000

# ============================================================================
# Memory Management Configuration
# ============================================================================
# Optimized memory settings for ShadowNews caching requirements

# Maximum memory limit - 256MB suitable for typical ShadowNews deployment
# Adjust based on available container memory and usage patterns
maxmemory 256mb

# Eviction policy when memory limit reached
# allkeys-lru removes least recently used keys regardless of expiration
# Optimal for mixed session and cache data in ShadowNews
maxmemory-policy allkeys-lru

# Number of keys to sample for LRU eviction
# 5 samples provide good balance between accuracy and performance
maxmemory-samples 5

# ============================================================================
# Lazy Freeing Configuration
# ============================================================================
# Memory deallocation strategy for better performance

# Lazy freeing during eviction - disabled for predictable performance
# Synchronous freeing ensures immediate memory availability
lazyfree-lazy-eviction no

# Lazy freeing for expired keys - disabled for consistent latency
lazyfree-lazy-expire no

# Lazy freeing for DEL command - disabled for ShadowNews reliability
lazyfree-lazy-server-del no

# Lazy freeing during replica resynchronization
replica-lazy-flush no

# ============================================================================
# Append-Only File (AOF) Persistence
# ============================================================================
# Write-ahead logging for maximum ShadowNews data durability

# Enable AOF for better durability than snapshots alone
# Critical for ShadowNews user sessions and real-time data
appendonly yes

# AOF filename in container volume
appendfilename "appendonly.aof"

# Sync frequency - everysec balances performance and durability
# Provides 1-second maximum data loss window
appendfsync everysec

# Allow AOF rewrites during background saves
# Prevents blocking during high-activity periods
no-appendfsync-on-rewrite no

# Auto-rewrite when AOF grows 100% larger than last rewrite
# Keeps AOF file size manageable for ShadowNews
auto-aof-rewrite-percentage 100

# Minimum AOF size before auto-rewrite triggers
# 64MB threshold prevents excessive rewrites
auto-aof-rewrite-min-size 64mb

# Load truncated AOF files on startup
# Provides resilience against partial writes
aof-load-truncated yes

# Use RDB+AOF mixed format for faster loading
# Combines RDB efficiency with AOF durability
aof-use-rdb-preamble yes

# ============================================================================
# Lua Scripting Configuration
# ============================================================================
# Lua script execution timeout - 5 seconds prevents runaway scripts
# Protects ShadowNews from infinite loops in custom Lua operations
lua-time-limit 5000

# ============================================================================
# Clustering Configuration
# ============================================================================
# Clustering disabled for single-instance ShadowNews deployment
# Enable for multi-node Redis cluster if horizontal scaling needed
cluster-enabled no

# ============================================================================
# Performance Monitoring Configuration
# ============================================================================

# Slow Query Log Settings
# Log queries taking longer than 10,000 microseconds (10ms)
# Helps identify ShadowNews performance bottlenecks
slowlog-log-slower-than 10000

# Keep 128 slow queries in memory for analysis
# Sufficient for identifying patterns without excessive memory usage
slowlog-max-len 128

# Latency Monitoring
# Threshold of 0 disables latency monitoring by default
# Enable with positive value if latency analysis needed
latency-monitor-threshold 0

# ============================================================================
# Event Notification Configuration
# ============================================================================
# Keyspace notifications for real-time ShadowNews features
# Empty string disables notifications by default
# Enable specific events if ShadowNews needs key expiration notifications
notify-keyspace-events ""

# ============================================================================
# Data Structure Optimization Settings
# ============================================================================
# Memory-efficient encoding thresholds for ShadowNews data structures

# Hash field optimization
# Use ziplist encoding for small hashes (user sessions, small objects)
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List compression for memory efficiency
# -2 means compress all nodes except head and tail
list-max-ziplist-size -2
list-compress-depth 0

# Set optimization for small integer sets
# Use intset encoding for sets with 512 or fewer integer values
set-max-intset-entries 512

# Sorted set optimization
# Use ziplist for small sorted sets (leaderboards, rankings)
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog sparse representation threshold
# 3KB threshold for efficient cardinality estimation
hll-sparse-max-bytes 3000

# Stream data structure optimization
# Optimized for ShadowNews real-time event streams
stream-node-max-bytes 4096
stream-node-max-entries 100

# Active rehashing for better key distribution
# Helps maintain performance with growing ShadowNews datasets
activerehashing yes
# ============================================================================
# Client Output Buffer Limits
# ============================================================================
# Prevent memory exhaustion from slow clients

# Normal clients (no limits) - suitable for ShadowNews API clients
client-output-buffer-limit normal 0 0 0

# Replica clients - limits for replication connections
# 256MB hard limit, 64MB soft limit for 60 seconds
client-output-buffer-limit replica 256mb 64mb 60

# Pub/Sub clients - limits for real-time ShadowNews features
# 32MB hard limit, 8MB soft limit for 60 seconds
client-output-buffer-limit pubsub 32mb 8mb 60
# ============================================================================
# Background Task Frequency
# ============================================================================
# Background task execution frequency
# 10 Hz (10 times per second) balances responsiveness and CPU usage
hz 10

# Dynamic frequency adjustment based on connected clients
# Optimizes background task frequency for current ShadowNews load
dynamic-hz yes

# Incremental fsync for AOF rewrites and RDB saves
# Reduces I/O blocking for better ShadowNews performance
aof-rewrite-incremental-fsync yes
rdb-save-incremental-fsync yes

# ============================================================================
# ShadowNews-Specific Optimizations
# ============================================================================
# Custom configurations optimized for ShadowNews use cases:
# - Session storage for user authentication
# - Rate limiting counters for API protection  
# - Email queue management for repository notifications
# - Real-time pub/sub for WebSocket features
# - Repository analytics and snowball effect tracking

# Memory eviction policy for mixed workload
# volatile-lru prioritizes removing expired keys first, then LRU
# Ideal for ShadowNews sessions (with TTL) and cache data
maxmemory-policy volatile-lru

# Client timeout for idle connections
# 300 seconds (5 minutes) balances resource usage with user experience
timeout 300

# Shorter keepalive for better connection management
# 60 seconds detects dead connections faster in containerized environment
tcp-keepalive 60

# Enhanced pub/sub buffer limits for real-time features
# 64MB hard limit, 32MB soft limit for 60 seconds
# Supports high-frequency real-time updates for ShadowNews notifications
client-output-buffer-limit pubsub 64mb 32mb 60